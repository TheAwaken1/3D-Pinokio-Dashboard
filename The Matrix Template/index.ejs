<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Pinokio Matrix Home</title>
  <style>
    /* General Styles */
    body {
      margin: 0;
      padding: 0;
      background: black;
      color: green;
      font-family: 'Courier New', monospace;
      position: relative;
      overflow: hidden; 
    }

    /* Matrix Animation Container */
    .matrix {
      position: absolute;
      top: 0; 
      left: 0;
      width: 100%;
      height: 100%;
      z-index: 0; /* behind everything else */
      pointer-events: none; /* clicks pass through */
    }

    /* Each falling line */
    .matrix span {
      position: absolute;
      top: -100%;
      font-size: 16px;
      color: rgba(0, 255, 0, 0.8);
      font-weight: bold;
      animation: drop linear infinite;
    }

    @keyframes drop {
      0% {
        transform: translateY(0);
        opacity: 0.1;
      }
      50% {
        opacity: 1;
      }
      100% {
        transform: translateY(200vh); /* travel far below the screen */
        opacity: 0.1;
      }
    }

    /* App Container (above the matrix) */
    main.app-container {
      position: relative;
      z-index: 1; /* show above the matrix */
      display: grid;

      /* Increase the min width so items are bigger by default. 
        For instance, from 120px up to 160px. */
      grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));

      /* Increase the gap between grid cells for more spacing */
      gap: 40px; 

      /* Increase padding around the entire container if you want more space from edges */
      padding: 80px;
      margin-top: 20px;
    }

    .item {
      /* Increase the width and height to make each app bigger */
      width: 150px;
      height: 150px;

      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;

      background: rgba(0, 255, 0, 0.1);
      border: 1px solid green;
      border-radius: 10px;
      cursor: pointer;
      text-align: center;
      text-decoration: none;
      color: green;

      transition: transform 0.3s, background 0.3s;
    }

    /* Optionally increase the hover scale for a bigger “pop” effect */
    .item:hover {
      transform: scale(1.15);
      background: rgba(0, 255, 0, 0.3);
    }

    .item img {
      width: 50px;
      height: 50px;
    }

    /* Bottom Buttons (above the matrix) */
    .bottom-buttons {
      position: fixed;
      width: 100%;
      bottom: 20px;
      display: flex;
      justify-content: center;
      gap: 20px;
      z-index: 1; /* above the matrix */
    }

    .button {
      text-decoration: none;
      padding: 10px 20px;
      background: black;
      border: 1px solid green;
      color: green;
      font-size: 14px;
      font-family: inherit;
      border-radius: 5px;
      transition: background 0.3s;
    }
    .button:hover {
      background: rgba(0, 255, 0, 0.2);
    }
  </style>
</head>
<body>

  <!-- Matrix Animation -->
  <div class="matrix">
    <% 
      const NUM_COLUMNS = 20;         // How many columns across the screen
      const DROPS_PER_COLUMN = 5;     // How many drops in each column
      for (let col = 0; col < NUM_COLUMNS; col++) {
        // Determine if this column is '0' or '1'
        const digit = (col % 2 === 0) ? '0' : '1';
        const leftPos = (100 / NUM_COLUMNS) * col; // in %

        for (let i = 0; i < DROPS_PER_COLUMN; i++) {
          // Random speed between 5 and 10 seconds
          const speed = (5 + Math.random() * 5).toFixed(2); 
          // Random delay up to 5s
          const delay = (Math.random() * 5).toFixed(2);
    %>
          <span 
            style="
              left:<%= leftPos %>%;
              animation-duration:<%= speed %>s;
              animation-delay:<%= delay %>s;
            "
          ><%= digit %></span>
    <% 
        }
      }
    %>
  </div>

  <!-- App Items -->
  <main class="app-container">
    <% items.forEach(item => { %>
      <a href="<%= item.url %>" class="item">
        <img src="<%= item.icon || 'default-icon.png' %>" alt="<%= item.name %>">
        <div><%= item.name %></div>
      </a>
    <% }) %>
  </main>

  <!-- Bottom Buttons -->
  <div class="bottom-buttons">
    <a href="/?mode=explore" class="button">Discover</a>
    <a href="/?mode=settings" class="button">Settings</a>
  </div>

</body>
</html>




















